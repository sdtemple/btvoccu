if((naprob > 1) | (naprob < 0)){"naprob must be in [0,1]"; return()}
# site-occupancy
psi <- array(dim = c(nsites, nseasons, nperiods))
X <- array(dim = c(nsites, nseasons, nperiods, length(beta)))
X[,,,1] <- 1 # intercept
for(i in 1:nsites){
X[i,,,2:(lb+1)] <- mvtnorm::rmvnorm(1, occusite, abs(occusite) / 4 * diag(lb)) # site-specific
for(j in 1:nseasons){
for(l in 1:rbt){X[i,j,,(lb+1+l)] <- occutime[l,] + rnorm(nperiods, sd = noise / 10)} # time-varying
for(k in 1:nperiods){
if(probit){
psi[i,j,k] <- pnorm(beta %*% X[i,j,k,] + rnorm(1, sd = noise))
} else{
psi[i,j,k] <- faraway::ilogit(beta %*% X[i,j,k,] + rnorm(1, sd = noise))
}
}
}
}
# detection
p <- array(dim = c(nsites, nseasons, nperiods))
W <- array(dim = c(nsites, nseasons, nperiods, length(alpha)))
W[,,,1] <- 1 # intercept
for(i in 1:nsites){
W[i,,,2:(la+1)] <- mvtnorm::rmvnorm(1, detsite, abs(detsite) / 4 * diag(la)) # site-specific
for(j in 1:nseasons){
for(l in 1:rat){W[i,j,,(la+1+l)] <- dettime[l,] + rnorm(nperiods, sd = noise / 10)} # time-varying
for(k in 1:nperiods){
if(probit){
p[i,j,k] <- pnorm(alpha %*% W[i,j,k,] + rnorm(1, sd = noise))
} else{
p[i,j,k] <- faraway::ilogit(alpha %*% W[i,j,k,] + rnorm(1, sd = noise))
}
}
}
}
# presence-absence
y <- array(dim=c(nsites, nseasons, nperiods, 1))
for(i in 1:nsites){
for(j in 1:nseasons){
for(k in 1:nperiods){
y[i,j,k, 1] <- rbinom(1, 1, rbinom(1, 1, psi[i,j,k]) * p[i,j,k])
}
}
}
# insert NAs
for(i in 1:nsites){
for(j in 1:nseasons){
for(k in 1:nperiods){
if(runif(1) < naprob){
y[i,j,k,1] <- NA
}
}
}
}
na <- !is.na(y)
na <- apply(na, c(1,2,3,4), as.numeric)
yna <- replace(y, is.na(y), 0)
# naming
sites <- 1:nsites
dimnames(y)[[1]] <- sites
dimnames(X)[[1]] <- sites
dimnames(W)[[1]] <- sites
seasons <- 1:nseasons
dimnames(y)[[2]] <- seasons
dimnames(X)[[2]] <- seasons
dimnames(W)[[2]] <- seasons
periods <- 1:nperiods
dimnames(y)[[3]] <- periods
dimnames(X)[[3]] <- periods
dimnames(W)[[3]] <- periods
occueffs <- paste("bvar", 1:length(beta), sep = "")
deteffs <- paste("avar", 1:length(alpha), sep = "")
dimnames(y)[[4]] <- "response"
dimnames(X)[[4]] <- occueffs
dimnames(W)[[4]] <- deteffs
return(list(y=y,
yna=yna,
na=na,
X=X,
W=W,
p=p,
psi=psi,
nsites=nsites,
nseasons=nseasons,
nperiods=nperiods,
beta=beta,
alpha=alpha,
sites=sites,
seasons=seasons,
periods=periods,
occueffs=occueffs,
deteffs=deteffs))
}
# site-specific means
occusite <- 1/2
detsite <- -1/2
# time-varying covariates
occutime <- array(NA, dim = c(1, 20))
occutime[1,] <- sin(2 * pi * 1:20 / 40)
dettime <- array(NA, dim = c(1, 20))
dettime[1,] <- sin(2 * pi * 1:20 / 40 - pi / 4)
betas <- c(1, 2, 1)
alphas <- c(1, 2, 1/2)
d <- btvoccu_simstudy(nsites,
nseasons,
nperiods,
betas,
alphas,
occusite,
detsite,
occutime,
dettime)
y <- d$y
sites <- d$sites
seasons <- d$seasons
periods <- d$periods
bvar <- d$occueffs
avar <- d$deteffs
XW <- abind::abind(d$X, d$W)
View(d$p[,1,])
View(d$psi[,1,])
# site-specific means
occusite <- 1/4
detsite <- -1/2
# time-varying covariates
occutime <- array(NA, dim = c(1, 20))
occutime[1,] <- sin(2 * pi * 1:20 / 40)
dettime <- array(NA, dim = c(1, 20))
dettime[1,] <- sin(2 * pi * 1:20 / 40 - pi / 4)
betas <- c(1/2, 1, 1/2)
alphas <- c(1/2, -1, 1/4)
d <- btvoccu_simstudy(nsites,
nseasons,
nperiods,
betas,
alphas,
occusite,
detsite,
occutime,
dettime)
View(d$p[,1,])
View(d$psi[,1,])
y <- d$y
sites <- d$sites
seasons <- d$seasons
periods <- d$periods
bvar <- d$occueffs
avar <- d$deteffs
XW <- abind::abind(d$X, d$W)
# modeling
m <- btvoccu(niter, XW, y, sites, seasons, periods, bvar, avar,
nchains = nchains, print.interval = print.interval)
plot_trace(m, 'betas', 1)
plot_trace(m, 'betas', 2)
plot_trace(m, 'betas', 3)
plot_trace(m, 'alphas', 3)
plot_trace(m, 'alphas', 2)
plot_trace(m, 'alphas', 1)
posterior_effects(m)
View(posterior_effects(m))
occutime[1,] <- sin(2 * pi * 1:20 / 40) / 2
dettime <- array(NA, dim = c(1, 20))
dettime[1,] <- sin(2 * pi * 1:20 / 40 - pi / 4) / 2
betas <- c(1/2, 1, 1)
alphas <- c(1/2, -1, 1/2)
d <- btvoccu_simstudy(nsites,
nseasons,
nperiods,
betas,
alphas,
occusite,
detsite,
occutime,
dettime)
d <- btvoccu_simstudy(nsites,
nseasons,
nperiods,
betas,
alphas,
occusite,
detsite,
occutime,
dettime,
probit = T)
y <- d$y
sites <- d$sites
seasons <- d$seasons
periods <- d$periods
bvar <- d$occueffs
avar <- d$deteffs
XW <- abind::abind(d$X, d$W)
# site-specific means
occusite <- 1/4
detsite <- -1/2
# time-varying covariates
occutime <- array(NA, dim = c(1, 20))
occutime[1,] <- sin(2 * pi * 1:20 / 40) / 2
dettime <- array(NA, dim = c(1, 20))
dettime[1,] <- sin(2 * pi * 1:20 / 40 - pi / 4) / 2
betas <- c(1/2, 1, 1)
alphas <- c(1/2, -1, 1/2)
d <- btvoccu_simstudy(nsites,
nseasons,
nperiods,
betas,
alphas,
occusite,
detsite,
occutime,
dettime,
probit = T)
y <- d$y
sites <- d$sites
seasons <- d$seasons
periods <- d$periods
bvar <- d$occueffs
avar <- d$deteffs
XW <- abind::abind(d$X, d$W)
View(d$p[,1,])
View(d$psi[,1,])
# modeling
m <- btvoccu(niter, XW, y, sites, seasons, periods, bvar, avar,
nchains = nchains, print.interval = print.interval,
logit = F)
for(i in 1:3){plot_trace(m, 'betas', i)}
for(i in 1:3){plot_trace(m, 'alphas', i)}
View(posterior_effects(m))
betas <- c(3/4, 1, 1)
alphas <- c(1/2, -1, 1/2)
d <- btvoccu_simstudy(nsites,
nseasons,
nperiods,
betas,
alphas,
occusite,
detsite,
occutime,
dettime,
probit = T)
y <- d$y
sites <- d$sites
seasons <- d$seasons
periods <- d$periods
bvar <- d$occueffs
avar <- d$deteffs
XW <- abind::abind(d$X, d$W)
# modeling
m <- btvoccu(niter, XW, y, sites, seasons, periods, bvar, avar,
nchains = nchains, print.interval = print.interval,
logit = F)
View(posterior_effects(m))
for(i in 1:3){plot_trace(m, 'betas', i)}
for(i in 1:3){plot_trace(m, 'alphas', i)}
# time-varying covariates
occutime <- array(NA, dim = c(1, 20))
occutime[1,] <- sin(2 * pi * 1:20 / 40) / 2
dettime <- array(NA, dim = c(1, 20))
dettime[1,] <- sin(2 * pi * 1:20 / 40 - pi / 4) / 2
betas <- c(3/4, 1, 1)
alphas <- c(1/2, -1, 1/2)
d <- btvoccu_simstudy(nsites,
nseasons,
nperiods,
betas,
alphas,
occusite,
detsite,
occutime,
dettime,
probit = T)
y <- d$y
sites <- d$sites
seasons <- d$seasons
periods <- d$periods
bvar <- d$occueffs
avar <- d$deteffs
XW <- abind::abind(d$X, d$W)
# modeling
m <- btvoccu(niter, XW, y, sites, seasons, periods, bvar, avar,
nchains = nchains, print.interval = print.interval,
logit = F)
for(i in 1:3){plot_trace(m, 'betas', i)}
for(i in 1:3){plot_trace(m, 'alphas', i)}
View(posterior_effects(m))
# study design
nsites <- 15
nseasons <- 10
nperiods <- 20
# MCMC parameters
niter <- 2000
nchains <- 2
print.interval <- 200
nrep <- 50
# site-specific means
occusite <- 1/4
detsite <- -1/2
# time-varying covariates
occutime <- array(NA, dim = c(1, 20))
occutime[1,] <- sin(2 * pi * 1:20 / 40) / 2
dettime <- array(NA, dim = c(1, 20))
dettime[1,] <- sin(2 * pi * 1:20 / 40 - pi / 4) / 2
betas <- c(3/4, 1, 1)
alphas <- c(1/2, -1, 1/2)
d <- btvoccu_simstudy(nsites,
nseasons,
nperiods,
betas,
alphas,
occusite,
detsite,
occutime,
dettime,
probit = T)
y <- d$y
sites <- d$sites
seasons <- d$seasons
periods <- d$periods
bvar <- d$occueffs
avar <- d$deteffs
XW <- abind::abind(d$X, d$W)
# modeling
m <- btvoccu(niter, XW, y, sites, seasons, periods, bvar, avar,
nchains = nchains, print.interval = print.interval,
logit = F)
View(posterior_effects(m))
for(i in 1:3){plot_trace(m, 'betas', i)}
for(i in 1:3){plot_trace(m, 'alphas', i)}
d <- btvoccu_simstudy(nsites,
nseasons,
nperiods,
betas,
alphas,
occusite,
detsite,
occutime,
dettime,
probit = T,
nchains = 1)
# modeling
m <- btvoccu(niter, XW, y, sites, seasons, periods, bvar, avar,
nchains = 1, print.interval = print.interval,
logit = F)
for(i in 1:3){plot_trace(m, 'betas', i)}
for(i in 1:3){plot_trace(m, 'alphas', i)}
View(posterior_effects(m))
# study design
nsites <- 35
nseasons <- 3
nperiods <- 20
# MCMC parameters
niter <- 2000
print.interval <- 200
# site-specific means
occusite <- 1/4
detsite <- -1/2
# time-varying covariates
occutime <- array(NA, dim = c(1, 20))
occutime[1,] <- sin(2 * pi * 1:20 / 40) / 2
dettime <- array(NA, dim = c(1, 20))
dettime[1,] <- sin(2 * pi * 1:20 / 40 - pi / 4) / 2
betas <- c(3/4, 1, 1)
alphas <- c(1/2, -1, 1/2)
d <- btvoccu_simstudy(nsites,
nseasons,
nperiods,
betas,
alphas,
occusite,
detsite,
occutime,
dettime,
probit = T)
y <- d$y
sites <- d$sites
seasons <- d$seasons
periods <- d$periods
bvar <- d$occueffs
avar <- d$deteffs
XW <- abind::abind(d$X, d$W)
# modeling
m <- btvoccu(niter, XW, y, sites, seasons, periods, bvar, avar,
nchains = 1, print.interval = print.interval,
logit = F)
for(i in 1:3){plot_trace(m, 'betas', i)}
for(i in 1:3){plot_trace(m, 'alphas', i)}
View(posterior_effects(m))
View(d$p[,1,])
View(d$psi[,1,])
setwd("C:/Users/Owner/Dropbox/GitHub/btvoccu/R")
library(devtools)
devtools::document()
devtools::install*
devtools::install()
library(btvoccu)
set.seed(9292021)
# study design
nsites <- 35
nseasons <- 3
nperiods <- 20
# MCMC parameters
niter <- 5000
nchains <- 1
print.interval <- 500
nrep <- 50
# site-specific means
occusite <- 1/4
detsite <- -1/2
# time-varying covariates
occutime <- array(NA, dim = c(1, 20))
occutime[1,] <- sin(2 * pi * 1:20 / 40) / 2
dettime <- array(NA, dim = c(1, 20))
dettime[1,] <- sin(2 * pi * 1:20 / 40 - pi / 4) / 2
# effects
betas <- c(3/4, 1, 1)
alphas <- c(1/2, -1, 1/2)
storage <- array(NA, dim = c(length(betas) + length(alphas),
nrep, 2))
rp <- rep(NA, nrep)
nrep <- 40
# effects
betas <- c(3/4, 1, 1)
alphas <- c(1/2, -1, 1/2)
storage <- array(NA, dim = c(length(betas) + length(alphas),
nrep, 2))
rp <- rep(NA, nrep)
for(i in 1:nrep){
print(paste("simulation", i))
# simulate data
d <- btvoccu_simstudy(nsites,
nseasons,
nperiods,
betas,
alphas,
occusite,
detsite,
occutime,
dettime)
y <- d$y
sites <- d$sites
seasons <- d$seasons
periods <- d$periods
bvar <- d$occueffs
avar <- d$deteffs
XW <- abind::abind(d$X, d$W)
# modeling
m <- btvoccu(niter, XW, y, sites, seasons, periods, bvar, avar,
nchains = nchains, print.interval = print.interval)
smry <- posterior_effects(m)
smry <- apply(smry[,2:6], 1:2, as.numeric)
storage[,i,1] <- smry[,2]
storage[,i,2] <- smry[,3] - smry[,1]
rp[i] <- posterior_check(m, XW, y)$relativePresence
}
saveRDS(storage, "simstudy/table1.rds")
saveRDS(rp, "simstudy/vector1.rds")
setwd("C:/Users/Owner/Dropbox/GitHub/btvoccu/wnv")
set.seed(9292021)
# study design
nsites <- 35
nseasons <- 3
nperiods <- 20
# MCMC parameters
niter <- 5000
nchains <- 1
print.interval <- 500
nrep <- 40
# site-specific means
occusite <- 1/4
detsite <- -1/2
# time-varying covariates
occutime <- array(NA, dim = c(1, 20))
occutime[1,] <- sin(2 * pi * 1:20 / 40) / 2
dettime <- array(NA, dim = c(1, 20))
dettime[1,] <- sin(2 * pi * 1:20 / 40 - pi / 4) / 2
# effects
betas <- c(3/4, 1, 1)
alphas <- c(1/2, -1, 1/2)
storage <- array(NA, dim = c(length(betas) + length(alphas),
nrep, 2))
rp <- rep(NA, nrep)
for(i in 1:nrep){
print(paste("simulation", i))
# simulate data
d <- btvoccu_simstudy(nsites,
nseasons,
nperiods,
betas,
alphas,
occusite,
detsite,
occutime,
dettime)
y <- d$y
sites <- d$sites
seasons <- d$seasons
periods <- d$periods
bvar <- d$occueffs
avar <- d$deteffs
XW <- abind::abind(d$X, d$W)
# modeling
m <- btvoccu(niter, XW, y, sites, seasons, periods, bvar, avar,
nchains = nchains, print.interval = print.interval)
smry <- posterior_effects(m)
smry <- apply(smry[,2:6], 1:2, as.numeric)
storage[,i,1] <- smry[,2]
storage[,i,2] <- smry[,3] - smry[,1]
rp[i] <- posterior_check(m, XW, y)$relativePresence
}
saveRDS(storage, "simstudy/table1.rds")
saveRDS(rp, "simstudy/vector1.rds")
View(smry)
View(storage[,1,])
